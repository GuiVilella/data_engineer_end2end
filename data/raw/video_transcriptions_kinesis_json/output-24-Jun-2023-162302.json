{"data": "{\"value\":\"0.0 Hello there, today I'm talking to Kevin Bock, who is a cybersecurity expert, and one of the main6.06.0 people involved in the Geneva project. Geneva is a genetic algorithm that evades censorship by12.812.8 nation states. So in real time, Geneva can evolve to the ever more present danger of censorship by20.24000000000000220.240000000000002 really big entities such as governments. All of this is done through an evolutionary search over25.2825.28 a program grammar. And in this interview, we're going to touch on a whole range of topics,30.830.8 including Geneva, how it works, what it does, why people research it, and what it has done so far37.237.2 in the world, but also the broader topics of security and its connections to AI, how people42.8842.88 can get started in this field, and what the main questions and problems are in this space. Further,48.1648.16 Geneva comes out of a project at the University of Maryland called breaker space, which is a sort of54.9654.96 lab that includes undergraduates in security research, which is a really cool project. And60.2460.24 I think highlighting this would be helpful to some people, maybe you're at the university,65.0465.04 you don't know this exists, go there, take part. Alright, without further ado,69.0469.04 I want to give over to the interview and have fun.71.6877.28 Alright, everyone, I have with me today here, Kevin Bock, who is a PhD student at the University83.683.6 of Maryland, a cybersecurity researcher, and a member of breaker space, which is a pretty cool90.6490.64 project at the University of Maryland. He also has been in the news a little bit with a project97.1999999999999997.19999999999999 that's called Geneva, which uses genetic algorithms to evade censorship by nation states. And I think105.36105.36 that's pretty cool. So Kevin, welcome to the show. And thanks for being here.110.8110.8 Thank you. Thank you for having me. I'm excited to be here.112.88112.88 So the goal of today, it's a little bit different, because I'm a total new but security.118.39999999999999118.39999999999999 Most of the audience of this channel is not is into machine learning. Maybe some know about124.8124.8 security, some know about the the censorship apparatus that's in place around the world and132.4132.4 what people do about it. I think most won't. So today, I'll be asking mostly newish questions.139.44139.44 And we'll have you here to guide us through everything to guide us through like what's145.44145.44 happening in this world. So maybe you first can start off a little bit. How did you get into like,151.6151.6 how did you get to the place where you are? What's kind of the main things in security right now that157.68157.68 draw you to it? So I think security and the censorship space also is in this this really cool,164.72164.72 this really cool time where AI and ML techniques have been exploding and all these other fields.169.92169.92 And they're just over the last few years really breaking into security. And we're still figuring174.32174.32 out all the different applications where you can apply these techniques in security. There's new178.48178.48 techniques and new applications of this that people are discovering all the time from better182.72182.72 ways to detect spam and better ways to identify, hey, this domain is malicious or AI based scanners189.6189.6 for that binary you downloaded, that's probably malware, things like that. So security field is194.48194.48 still discovering all sorts of new ways you can apply these techniques. And that was one of my198.72198.72 motivations initially, actually, of bringing this censorship because this project was really203.04203.6 the entire field of censorship's first foray into using AI and ML like techniques.208.48209.44 And if you if you talk about censorship, what do you mean exactly by that?214.32214.32 Yes, there's so many forms of censorship in effect around the world today. I mean, everything from220.4220.4 political pressure to self censorship to taking down, like there's so many different types. So225.68225.68 I'm going to scope this discussion down a little bit, just the type of censorship that we study in229.68229.68 this lab. And that's this type of automated censorship that happens in the network performed235.28235.28 by nation states. So what do I mean by this? If you're a user in certain regimes around the world,240.72240.72 let's say in Iran or something, and you try and make a request, as that request, as that web245.52245.52 traffic crosses through the border to the country, it is scanned, parsed and inspected by some252.72252.72 machines that physically reside in the network called middle boxes, called because they're in256.48256.48 the middle of the network. And these middle boxes examine your request and they say, is this something260.64260.64 we should allow or not? And if the answer is no, they either inject traffic to take down your265.36265.36 connection or they drop your connection or they do something else. And then they say,269.04269.04 they drop your connection or they do something to disrupt what's going on. And you'll notice272.96000000000004272.96000000000004 everything I just said there, there's no human in the loop. There's no like human content review277.20000000000005277.20000000000005 or anything like this. It's a purely automated run by these middle boxes or firewalls deployed282.96000000000004282.96000000000004 by these nations that just like automatically inspect the internet traffic as they go by.286.96000000000004287.68 So that's really discopable, we've been studying here.290.08000000000004290.08000000000004 Naive question. Why can't I just encrypt my traffic and then like every traffic looks the same296.48296.48 towards the outside? Yeah, that's a great question. So why can't we just encrypt everything?301.44302.08000000000004 People have been trying. So there's like a couple different approaches to this. You're like, well,305.6305.6 let's just use HTBS, right? Encrypted, we're good. Unfortunately, HTBS has a small privacy leakage.312.48313.04 When you first set up an HTBS connection, that very first initial is called a handshake and317.52000000000004317.52000000000004 that first back and forth. You as the client, as a part of the protocol, you have to announce the322.72322.72 domain you're talking to. And that announcement happens unencrypted. So if you're making an HTBS328.32000000000005328.32000000000005 handshake to Wikipedia, in the very first packet you send, it's going to include the word Wikipedia.333.20000000000005333.84000000000003 And that's called the server name indication field. You indicate to the server what the name337.68337.68 of the server you're trying to talk to. And unfortunately, sensors just read that field341.84000000000003341.84000000000003 and then they take down your connection if you talk to a forbidden domain. So HTBS, unfortunately,346.64000000000004346.64000000000004 not close, but not quite finishing the job. Now I will say there have been just a quick sidebar.351.44000000000005351.44 There have been some advancements in HTBS to try and fix this. There's a recent proposal to encrypt356.32356.32 that field. It's called encrypted SNI. And China just started censoring that last year.361.76362.56 So you can try and encrypt things, but these sensors are often just hostile to the idea of368.24368.24 just letting their citizens just encrypt all their traffic. I guess it's a little bit like373.76374.32 if everyone encrypts, like with HTBS nowadays, everyone does it. So you can't conceivably block380.56380.56 HTBS just because you don't like some traffic. But if there's a new type of encryption,386.72388.64 it's probably only the people that have something to hide that use that type of encryption. So is394.16395.36 a strategy that the rest of the world as fast as possible would use these techniques to kind of401.04401.04 make that approach unusable? That's exactly right. The broader topic you're actually discovering and408.64408.64 saying out loud here is this idea of collateral damage. Can we make a protocol or something so414.8414.8 popular and use so diversely that if a sensor were to try and block it, it would cause irreparable421.2421.2 harm to good services? There's some meaningful cost to performing that censorship. So just like427.52427.52 you've identified HTBS, that's everywhere. They can't just shut down all HTBS. But rolling out432.71999999999997432.71999999999997 a new encryption method for HTBS that's not very widely deployed, they can nip that in the bud and437.36437.36 prevent its rollout. So there's this kind of this interesting race in a game between developers and442.48442.48 these sensors that's still being played out. Now, let's talk about more, let's say,448.24448.8 naive approaches. What is the development of the field? Like what has been tried before? And what455.92455.92 has been, let's say, thwarted? Or what's the cat and mouse game looked like in the past? I imagine461.6461.6 different things like there's Tor, there is, you know, all kinds of things. There is probably466.72466.72 things that everyone installs on their end, like VPNs and tunnels and so on. Like what's been the473.68473.68 general development over the years? Yeah, so the researchers and sensors have been playing this cat481.12481.12 and mouse game for two decades now. And it's kind of evolved and it's been playing out in multiple485.6485.6 fronts. So you're exactly right, Tor has been a huge front on that war, if you will, like we've491.44000000000005491.44000000000005 developed Tor and continued to advance it. Unfortunately, though, there are some limitations496.24496.24 just the Tor protocol and sensors can enumerate the Tor entry points basically and just block you. So502.32502.32 once you get into Tor, you're generally great, but they try and lock you out.505.92507.04 And there's been all sorts of techniques people have proposed, like maybe I can disguise my511.52511.52 traffic to look like Skype. And then the sensors like, well, you didn't disguise it quite well515.44515.44 enough, blocked. There's a whole interesting field of defeating censorship or subfield, I should say,522.64522.64 called packet manipulation based censorship. And this is this idea where all our communication is529.12529.12 happening via packets. And if you just tweak those packets in just the right way, you could cause the534.24534.24 sensor to miss you. And historically that's also been something that's played out in this cat and538.48538.48 mouse game where researchers will study these sensor systems and then they'll find a loophole543.6543.6 and they'll deploy it and use it. And then the sensor's like, oh, I'll fix that. And then we're548.0548.0 back to square zero. So this game has really been continuing to play. I'll call one thing out real553.6553.6 quickly about VPNs. Because a lot of people, particularly those who have been to China are557.68557.68 like, I've been able to use a VPN and it's been OK. VPNs in many places work, in many places they565.44565.44 don't. There's a country in the news recently, they were in the news because they rolled out a570.72570.72 new law that forced their citizens to swear on the Quran that they would not use a VPN in order to574.8574.8 get internet access installed in their homes. It's just like a crazy sentence to say out loud.579.3599999999999580.7199999999999 But in China, for example, these VPNs, many of them work most of the time. But what researchers586.7199999999999586.7199999999999 have noticed is that around the time politically sensitive events are happening or political590.64591.5999999999999 elections, things like this, a lot of VPNs will just mysteriously stop working. And then after the596.4799999999999596.4799999999999 event, they'll mysteriously start working again. And it kind of points to this broader idea that600.64600.64 some of these countries may be sitting on more censorship capability than they deploy on a daily604.88604.88 basis. And they have more power than they use. So this cat and mouse game may even be, the cat may610.88610.88 even be stronger than we think it is. Yeah. Can you give us an idea of what this packet617.92617.92 manipulation evasions look like? Because I imagine something you mentioned before, you know, if624.16624.16 there's Wikipedia in the header, I don't want my population to see Wikipedia, like that's it,629.28629.28 right? What can I possibly manipulate there in order to get it to get through such censorship?634.88636.0799999999999 Yeah, so we think about sensors as our computers are sending packets around, you can imagine a lot643.28643.28 of that communication, like you're writing mail, and your packets are envelopes that are going647.1999999999999647.1999999999999 that are going through the network. And in order to have a communication with a server like650.9599999999999650.9599999999999 Wikipedia, that's going to take a couple a couple envelopes back and forth, right? And the sensors655.04655.04 just like the postman in the middle reading all your letters. Unfortunately, that postman's got to659.28659.28 process a lot of letters, a lot of letters. And you can imagine the something that scale like China,664.3199999999999664.3199999999999 you're dealing with a huge, huge volume of traffic just on a constant basis. What that means is the670.64670.64 sensor can't just remember everything it sees. Okay, so for example, if it's trying to, if it's676.7199999999999676.7199999999999 trying to track that, hey, that person over there is trying to talk to that server over there, and680.0680.0 that person over there is talking that server over there, that state it has to maintain.683.92683.92 Right? And the amount of state it has to maintain, it'll grow. And it's in the size of some work like689.76689.76 China, it could grow pretty fast. So they have to be really careful about what they remember and the694.24694.24 state they maintain. So you can imagine doing something like, let's say we're exchanging packets,699.68699.68 there's exists a type of packet called the reset packet. And these are normal packets, our computers704.0799999999999704.0799999999999 send these all the time, but they basically just exist to tell the other side stop talking to me707.4399999999999707.4399999999999 immediately, I'm hanging up the connection. So you can imagine doing something like, you and I712.88712.88 are communicating, we're sending these packets back and forth. And I just slip one additional716.8716.8 packet into the connection towards the beginning and it's a reset packet. And I'll send that packet721.36721.36 along. And when the postman sees that packet, he's like, well, these guys have stopped communicating725.6725.6 after this message, he's going to ignore him forever. And then he throws away the state he's730.16730.16 maintaining about our connection. He forgets that we're talking because why would he need to remember733.6733.6 anymore? He thinks we're done. And if I craft that packet in such a way that it won't make it to you,738.16738.16 or you'll see it ignore it or something like this, then we'll be able to still communicate fine,743.04743.04 right? Like, our communication is unimpacted. But any other packets that go by the sensors like,748.4748.4 I don't know who this is, yeah, and you can get through. This is like the broad strokes, this idea753.1999999999999753.1999999999999 of packet manipulation based censorship, where you're, you're tweaking the packets that go by to757.36757.36 try and basically trick the sensor that's in the middle into letting you continue to talk.761.04761.92 Now, do I see this correctly that there have been like, a giant amount of these schemes767.12767.12 proposed and as you say, there's a cat and mouse game one is being proposed, then they fix it,772.48772.48 then another one, then they fix it. So that points to the possibility of what if we could have778.32778.32 something dynamic, right? What if we could have something that by itself tries to invent new784.48784.48 things? And that's where you went with Geneva? Do I understand that correctly?788.48789.04 That's exactly correct. Yeah, you're spot on. Yeah, so over the years, there's been,793.36793.36 I want to say dozens of these that have been proposed and researchers have, it's exactly,797.6800000000001797.6800000000001 it's exactly this cat and mouse game. They studied the censorship system. I mean,800.48800.48 the censorship system is not public. So they're probing it, they're trying to take measurements.804.5600000000001804.5600000000001 That's a lot of work. And then they get an understanding, they apply their good human808.08808.08 intuition, they develop something cool and publish it. And the sensor fixes it. They don't tell you812.5600000000001812.5600000000001 they fix it. They don't publish a paper that's like, hey, we just fixed your bug. So it just817.52817.52 resets this to square zero. And so the idea with Geneva, which stands for genetic invasion, the823.76823.76 idea of this was it's an algorithm that could kind of flip this process on its head. So instead of a828.4828.4 human having to take the approach of let's understand how the censorship works and then832.56832.56 defeat it, let's just have some AI or fuzzer or automated system just attack the sensor,838.4838.4 figure out ways through and then give it to the human. And now after the fact, my slow human843.1999999999999843.2 brain can go figure out why that thing works. And now my brain is no longer a bottleneck to helping848.5600000000001848.5600000000001 people get through the sensor.849.6849.6 So how does this, you want to go a bit more into detail? I mean, it sounds great at the surface,856.48856.48 but there's a reason, right? We need security researchers probing, making sense. And there's a861.6800000000001861.6800000000001 reason that's the bottleneck. If I were just to be like, well, you know, fuzz a bit, it's probably868.0868.0 not going to work. So what does Geneva do that allows it to even be successful where maybe humans876.48877.44 take a long time or wouldn't be successful?879.6880.8 Yes, there were a couple pretty significant challenges when we first started in applying884.48884.48 something like a genetic algorithm or really any AI to the space of censorship. And if you think889.6889.6 about the way censorship works, it's not hard to imagine like why that's the case. Because if you893.52893.52 think about a censorship problem, right, like a query is either censored or it's not, it's just a898.88898.88 binary decision. So it's not like your traditional ML or AI where you have this nice like gradient904.24904.24 descent, there's no error, you're back from the sensor. The sensor doesn't tell you like, hey,908.0908.0 if you tweak your query, just a little bit, you're getting closer. You know, there's no gradient911.92911.92 with which you could work. So that property alone rules out the majority of the ML field as far as918.56918.56 approaches you could take.919.36919.36 Is there even a loss? Like you said, it's hard to detect if you even get through. How do you do that924.72924.72 in the first place? How do you notice success or failure?927.76928.96 Yeah, so in our case, you're exactly right, capturing that could be difficult. What we do to935.04935.04 make it easier in ourselves is we obtain machines inside these censored countries and directly try940.24940.24 to request for written content. So Geneva trains directly against the sensor and we know we got it.945.28945.28 When the sensor takes action, it's kind of obvious. So Geneva will try and obtain some950.0799999999999950.0799999999999 forbidden content while manipulating the packet stream. And then if it succeeds, great. If it954.3199999999999954.3199999999999 fails, we'll know. Right. So this idea of how do we apply ML, AI, some fuzzing to this space? Like963.28964.0 how do we build to this? There's a couple main challenges towards doing that. The first is this969.6969.6 total lack of gradient that I mentioned. And really, the biggest challenge is that you have973.8399999999999973.84 to build a whole bunch of things to get to the end of the world. And that's the first one.977.84977.84 The second one is the lack of gradient. And really, that only leaves you with kind of a small982.8000000000001982.8000000000001 number of approaches. And we chose to go down the route of let's use a genetic algorithm for this.987.44988.0 There's some nice properties. It's easily explainable. You can understand how it works992.08992.08 while it runs. It's a little less black boxy than something more like a neural net or something,996.72996.72 or Markov or something like this. But if you want to build a genetic algorithm,1001.841001.84 there's a couple of things you need. You need some building blocks, something that the algorithm1007.68000000000011007.6800000000001 can compose and put together. And you need some way for it to put those things together. I mean,1012.56000000000011012.5600000000001 us humans as examples, as far as like genetics goes, we've got our DNA bases, right? ACTG.1016.961017.76 And we can put those together in DNA. For the genetic algorithm for Geneva, we needed to decide1023.61023.6 what makes sense for building blocks for the algorithm to use. And that alone is like an1029.681029.68 initial really huge challenge because you could be creative and you can think about a million1034.881034.88 different ways an algorithm could manipulate a packet, right? Flip a bit, you could flip this bit.1040.56000000000021040.5600000000002 There's just so many different things you could give it to do. So one of the first challenges we1045.681045.68 had to figure out was how do we balance what this algorithm can and cannot do to the data it has.1051.041051.04 And on one hand, we could let it flip any bit. The downside of that is it could take like forever1055.761055.76 to learn a checksum, but it's super powerful. Like on the other extreme there, we could just encode1062.241062.24 what previous researchers found and let it play with those together. It would be super fast,1066.561066.56 but it'd be hard to learn anything new, right? We'd just be building on biases directly.1070.01070.8 So the approach we ended up taking was giving Geneva basically the same ability to change1077.361077.36 traffic as what the network itself could do. So the network itself has just a few set primitives1082.561082.56 that can do the packets. It can take a packet, make multiple packets, it can duplicate them,1086.241086.24 it can change a header to something, it's tampering a packet, you can take a packet,1090.081090.08 break it into multiple pieces, fragmenting, you can take a packet, drop it, which is just basically1094.39999999999991094.3999999999999 deleting the packet. So we build out these building blocks and then allow it to compose1099.841099.84 these things together in trees. Yeah. So like syntax, you give it a syntax and it can1105.361105.36 assemble a little program out of this syntax, like one we see right here.1111.19999999999981112.08 That's exactly correct. Can you walk us through what this particular thing does?1116.39999999999991117.36 Sure. Sure. This is kind of a fun strategy. So there's a few different components to a Geneva1126.15999999999991126.1599999999999 strategy. I'll break down the syntax for you real fast, what these programs look like. So the first1130.561130.56 component is the idea of a trigger. The trigger is what's between the square brackets. So there's two1135.361135.36 triggers in this, TCP flags S and TCP flags R. And when Geneva is monitoring traffic, the trigger1141.61141.6 tells it which packet should I act upon. So this first trigger you see here says TCP flags S. Okay,1147.67999999999981147.6799999999998 so that means that whatever actions are attached to that trigger will run on any SYN packet at C.1153.361153.36 S stands for SYN and SYN means the start of my connection. So the first trigger is the SYN1158.39999999999991158.4 and SYN means the start of my connection. So what this is going to do to that packet is the very1164.08000000000021164.0800000000002 first action we see is duplicate. So that means it's going to take that packet and make two of1167.921167.92 them. Now duplicate, the syntax of this is it's one set of actions, comma, another set of actions.1174.56000000000021174.5600000000002 So you'll see the two actions you see here are tamper and then send. So the second duplicate,1178.80000000000021178.8000000000002 we do nothing to. So the second duplicate, we're just going to send on the wire.1182.881182.88 But to the first duplicate, what we're going to do is we're going to replace the flags fields in1187.36000000000011187.3600000000001 that packet with SYNAC SA, and then we're going to send that packet. So basically what this little1193.12000000000011193.1200000000001 program does is it sees outgoing SYN packets to your computer and it duplicates them to make two1199.36000000000011199.3600000000001 packets and then replaces the flags in the first one with SYNAC. Now any networking person listening1205.04000000000021205.0400000000002 is like, this is clearly ridiculous. This never should work. Why would we even do this? Why are1209.84000000000011209.84 we talking about this? And what's going on here is that for certain sensors around the world,1214.241214.8799999999999 SYNAC is the packet that's typically sent by a server. It's never sent by a client.1219.19999999999981219.9199999999998 So what's going on in this strategy is when the client sends a SYNAC, the sensor says,1226.081226.08 whoa, I must have missed something. This client is clearly a server, which means the server must1231.19999999999981231.1999999999998 be the client. It reverses the roles of client and server in the mind of the sensor. And as a1236.721236.72 consequence, when the client makes the real request, since the sensor is processing packets1241.21241.2 differently between client and server, you're through. I see. So that's this idea of the strategy.1245.681245.68 So that connection in the mind of the sensor is already established as here's a server,1250.01250.0 here's a client, and it kind of keeps that state for subsequent packages.1255.281256.24 More or less. Yeah, that's exactly it. Yeah. So this is an example of just one strategy in one of1261.60000000000011261.6 these programs that Geneva built this program itself and it built this through the process of1266.81266.8 evolution. Yeah. And you've discovered just to jump ahead a little bit because we're not through1272.241272.24 yet with explaining exactly how it works. But you've discovered that Geneva will actually1277.19999999999981277.1999999999998 reproduce a lot of the common or known or already discovered things that researchers have proposed.1288.321288.32 Yeah, we had this really cool result initially where we set out to try and...1294.63999999999991295.36 We wanted to, when we first developed this tool, kind of benchmark it against the rest of the fields.1300.15999999999991300.8799999999999 And that's kind of challenging because sensors have continued to evolve. So what we did was we sat1305.521305.52 down in the lab and we implemented in the lab our best guess as to what... our best implementation,1311.91999999999981311.9199999999998 I should say, as to what these sensors look like based on what previous researchers found. And then1315.91999999999981315.92 train Geneva against these mock sensors and also train it against the great firewall and real1320.56000000000021320.5600000000002 sensors where we could. And we found this very quickly. It was able to reproduce basically the1325.921325.92 entire field. Every strategy a human had come up with, this also found and it found them pretty1331.041331.04 quickly. So it's really shown the power of automated approaches and AI and ML. Yeah.1336.08000000000021336.88 So you have... Let's get back a little bit. You have this syntax, right, that you can build1342.641342.64 trees from which are valid programs in Geneva. This will modify the traffic somehow. Now,1348.08000000000021348.0800000000002 to say that most of this traffic will just not even be traffic probably, like it will...1353.52000000000021353.5200000000002 Like the connection will be somehow bad. Some of it will go through and some of it will actually1360.241360.24 maybe evade the sensor. What do we need to get there? What do we need to, you know, to get to a1367.921367.92 place where, I guess, if you just do it naively and you randomize a little bit, it will just be1374.32000000000021374.3200000000002 bad, like 99.9% of all the programs you generate, you'll initiate them. And then after a while,1381.441381.44 you'll see like my traffic doesn't even isn't even getting anywhere, right? So what are the,1387.921387.92 like of the genetic algorithm components, what do we still need? Yeah, so we're building our way up1393.921393.92 to genetic algorithm. We've got, just like you said, we got our building blocks, we got a way to put them together,1398.32000000000021398.3200000000002 we got a syntax that we can build these programs out of, and we can run these programs on network traffic.1402.80000000000021402.8000000000002 And you're exactly correct that if we initialize completely randomly, it's going to do terribly.1407.921407.92 And that's exactly what happens. We've tested this. So where do we need to go from here now that we1413.21413.2 have this? So this kind of brings us to this idea of let's get evolution in the mix.1419.041419.04 So you can imagine, you can imagine the way the way this works is we have a big pool of strategies,1425.121425.12 okay, we'll call this a population. And each of these populations just take for granted for now1429.61429.6 that we have some diverse set of strategies in here. And we have a way to test them, right? We can try1434.63999999999991434.6399999999999 and make requests for something forbidden, and we can run these programs on those requests as we make them.1438.81438.8 So for example, from inside of China, we can try and access Wikipedia, that's a sensory resource,1443.441443.44 and we'll have these programs running on that connection, we'll just try and make that connection1446.39999999999991446.4 over and over again. What we'll see is some of these strategies will destroy our connection,1451.21451.2 some of them will just not work at all and do terribly. Some of them might let our, some of them1455.521455.52 might keep our connection alive, and maybe if we get crazy lucky one of them will defeat censorship.1460.161460.16 But for now let's just say a whole bunch of them will just destroy our connection, and maybe some won't.1464.56000000000021465.76 What we have is a fitness function, and this fitness function, this is a, this borrows from a much1471.28000000000021471.28 broader space in ML and AI, but it's basically this idea of if you take some individual from the1476.87999999999991476.8799999999999 population, some individual strategy, how good is this thing? Survival of the fittest, like should this1482.81482.8 thing survive basically, continue to propagate its genetic material? So this was actually the second1488.161488.16 big challenge in applying AI and ML to the space of sensory vision of what on earth should a fitness1493.441493.44 function look like in this space? Because just like we talked about earlier, there's no gradient,1497.841497.84 right? And even coming up with like a loss function can be a little tricky.1501.041501.04 And I mean, even if like, sorry to interrupt, but if the fitness, even like if the fit, I guess the1508.321508.32 fitness, is it anything else than zero? Like, okay, maybe some connections don't even work to like the1513.43999999999981513.4399999999998 server next to you, you can discard those. But other than that, the fitness is either doesn't reach1519.281519.28 the target, or does reach the target. And if it does, you've kind of won, right? Like, how can you1525.361525.36 even get a meaningful signal? Is there a fitness in between zero and one?1529.281530.24 Yeah, so and part of what makes Geneva work is we've kind of shoehorned our way into getting1535.041535.04 fitness between zero and one. And specifically, what we do is, is rule out those strategies that1541.521541.52 break your own connection. So that's kind of how we've gotten between zero and one. Because it's1545.61545.6 not it's not technically zero one, it's almost negative one, zero one. And negative one is Geneva1549.841549.84 shooting itself in the foot, right? It's just like dropping on your traffic, but that's never going to1553.43999999999981553.44 work. And we shouldn't even bother exploring that space more, right? Like we're never going to go1557.21557.2 anywhere. But if you can make it so that your packets are at least interacting with the sensor,1562.41562.4 and at least have the potential to link to the server, well, now we might be getting somewhere.1565.921566.4 So basically, what we do is we set up the fitness function in such a way that if strategies destroy1571.12000000000011571.1200000000001 the underlying connection, but we punish severely and basically killed off. And strategies that1576.01576.0 interact with the sensor, even though they get censored, they'll get a slightly higher fitness1579.281579.28 function than those other ones. So what's going to happen is, because those those individuals are1584.321584.32 they're not successful, but they're still the most successful in the population pool, which means1589.121589.12 some subset of them will continue to reproduce and basically that subsets just chosen randomly.1592.481593.28 But because we're just choosing randomly mutation is still going to happen. So we're basically1598.01598.0 taking a set of individuals, they all interact with the sensor, and then we just mutate them1602.321602.32 and try again, and then mutate them and try again. And effectively what this is turned into is a1606.161606.16 fuzzer. Like Geneva is the fitness function is basically makes this a targeted fuzzer where we1612.241612.24 can fuzz just the space of strategies, just the space of programs that allow us to interact with1617.21617.2 the sensor. And then where it gets interesting is as this fuzzer is running generation after1621.921621.92 generation, just trying different crazy things against the sensor. If it finds something that1626.481626.48 gets through suddenly that fitness is way higher than everything else. And that individual will1630.80000000000021630.8000000000002 start sharing its genetic material and propagating within the population pool.1634.32000000000021634.32 At that point, we could stop. We could stop the fitness function right there, but we optionally1638.87999999999991638.8799999999999 add some additional punishments and rewards for the algorithm at this point. And specifically,1643.43999999999981643.4399999999998 we add basically a punishment for strategy complexity. So if an individual is successful,1650.961650.96 we optionally punish it for basically the number of actions and the amount of overhead it adds to1657.041657.04 connection. And the reason we do that is this is not strictly required, but I have a very1661.91999999999981661.92 small, smooth human brain. And it's so much easier to understand a strategy that's only1667.12000000000011667.1200000000001 two actions long compared to some of that's 50 actions long, for example. So if we can encourage1671.281671.28 the algorithm like, great, you got a solution. Now simplify it down for me. And it will over the1675.441675.44 course of generations whittle it down to its smallest form and then at the end present to1679.441679.44 you its population pool and its best individuals.1681.84000000000011683.3600000000001 And we see here a few ways you can mutate. I think this just essentially comes down to1690.161690.16 changing the syntax tree in some form.1693.441693.44 Yep.1694.241694.24 And these are1695.281695.28 Basically, you can, yeah, you can imagine all the different ways you can take these programs and1699.36000000000011699.3600000000001 mix them around. And if you can think about it, Geneva can probably do it.1702.161702.16 Yeah. And so just maybe for my understanding, but you're trying all of this, you say you have1710.80000000000021710.8000000000002 some machines inside of these countries aren't, and I read some like, obviously, this is not going1716.56000000000021716.56 to work against IP blocking. Like, how do you not get IP blocked by them? If like, I imagine there's1723.761723.76 like, some weird traffic that's, you know, hits my censorship wall all the time. Why don't I just1730.961730.96 be like, well, gone?1732.87999999999991733.76 Yeah, that's a good question. And we get this question a lot, actually. And you're kind of1737.67999999999981737.6799999999998 pointing to this broader question of like, what's the censors response? You're doing all these1741.61741.6 wacky, crazy, ridiculous things. I mean, there's a strategy in there that just lights up every TCP1746.481746.48 flag. Like that package shouldn't exist flatly. It has no meaning on the network. But Geneva tried1752.241752.24 it, found it and found that it works. So where do censors go from here? It sounds like, when we're1758.95999999999981758.9599999999998 talking about things like it's sending crazy packets, it sounds like that should be something1762.63999999999991762.6399999999999 that's easy to detect on the network. But it sounds easy until you try and write it. Because1767.521767.52 if you think about it, writing something to detect abnormality when you have no idea what that1771.841771.84 abnormality is like, especially in the space of just like, just how random and crazy the internet1776.63999999999991776.6399999999999 is all the time. Identifying that is actually harder than it sounds. And what makes it potentially1782.41782.4 even harder is that a lot of the middle boxes that would be doing that detecting is exactly the1786.87999999999991786.8799999999999 middle boxes Geneva is mucking with these strategies. So it may be the case that their1790.721790.72 detectors are also getting screwed up, whatever, an imaginary detector, but it's not going to be1795.361795.36 the case that their detectors are getting screwed up, whatever, an imaginary detector would also be1799.67999999999981799.6799999999998 getting screwed up by these same strategies. So it's something they could take an action against,1804.95999999999981804.9599999999998 but we haven't seen any sensors roll out something like this. Something else you could imagine,1810.081810.08 the existing fitness function we've just described for Geneva, it kind of assumes a static adversary,1815.281815.28 like an adversary that's not playing along, if you will. And it's also assuming an adversary1819.61819.6 that's not doing anything special to hunt it out. And you could imagine a sensor that's a little1824.01824.0 bit more of a threat to the user. And the thing we've kept an eye on is the idea in the future,1828.481828.48 if either the sensor starts rolling out AI ML techniques, or if the sensor starts hunting for1834.241834.24 traffic that looks very abnormal. And you could imagine encoding additional bits into the fitness1839.681839.68 function, such that you could encourage Geneva to make this strategy blend in with normal traffic.1844.161844.16 I want this to look as normal as possible, but still get through things like this. So you could1848.081848.08 imagine all sorts of modifications to the fitness function to make an algorithm like this a stronger1853.21853.2 plan along. But we haven't seen the adversaries do that yet. So we haven't needed to.1857.681857.68 I was surprised when we talked to a bunch of also people in the intersection of security and machine1864.481864.48 learning that there are, as you say, these ML based, let's say, malware detectors or things1870.881870.88 like this, I guess, also weird traffic detectors, and people use them, for example, for company1877.041877.04 networks and so on. And these are, to my surprise, also, for example, vulnerable to adversarial1883.61883.6 attacks. So there's an entire new direction opening, which usually people imagine adversarial1889.041889.04 attacks, like, I changed the image a little bit. And it's really this distinction between how the1893.681893.68 human sees it and how the machine sees it. But you know, in malware, it's like just bits. And I1898.961898.96 flip like, you know, very small number of bits, there's nothing like how the human sees it and how1904.63999999999991904.64 the machine sees it. It's so weird. But yeah, I think, I think it's, it's pretty cool. And you got1913.52000000000021913.5200000000002 some attention in the media. And the articles usually go something like this AI can evade1923.04000000000021923.0400000000002 censorship or something like this. And now knowing that you use genetic algorithms, what do you how1932.08000000000021932.08 do you think? How was how was your work received in the media? What do you think about it? Do you1937.43999999999981937.4399999999998 feel like they are kind of trying to put a few buzzwords in there? Or were you happy with it?1944.87999999999991946.0 In general, pretty happy. I've kind of been lucky to I mean, even just discussions like this,1950.15999999999991950.1599999999999 or we can talk about the work in a deeper context than just like throwing buzzwords around.1954.01954.8 Like, this is just an awesome way to kind of cut through that that buzzwordy1958.01958.0 fanfare, if you will. Yeah. So I've been kind of lucky. You're always going to see buzzwords1962.961962.96 attached to things that's always something like that. But yeah, I'd say overall, it's been it's1967.361967.36 been received positively and things like this are really what helped us get there.1970.881970.88 Cool. And the just saying the code for Geneva is available. It's on GitHub. Anyone can anyone can,1978.081978.08 I guess, look it up. Your builds fail right now. I just have to tell you I'm sorry.1982.481982.48 Yeah, we're switching between CI systems and haven't finished the migration.1986.01986.0 Okay, I mean, yeah. So where is there? I mean, there is a lot of open space here,1994.481994.48 it seems the genetic algorithms are very cool. They're like a basis right here. Do you think2002.02002.0 there are more places where, like machine learning techniques, especially you said, you know, we kind2007.842007.84 of have to draw back from the gradient based approaches, but there are definitely there's2012.63999999999992012.6399999999999 definitely possibilities. If you think of something like, you know, AlphaGo or something like this,2017.762017.76 that's it's a discrete game. But also, you know, they they work with neural networks that,2022.82022.8 for example, when you build your tree, your modifications that guide that somehow that,2029.362029.36 you know, have an idea, which of the modifications might be the most important. And I think that's2035.122035.12 have an idea, which of the modifications might lead to a better algorithm to a worse algorithm2040.82040.8 and so on. Do you see any sort of evolvement that could happen there?2045.282046.2399999999998 Definitely, definitely. When we first wrote Geneva, our goal was not to be the last AI approach to2051.83999999999972051.8399999999997 the space, it was to be the first and hopefully the worst. Yeah, it would be great if viewers out2057.22057.2 there, hey, take a crack at this. There's all sorts of new techniques out there just waiting2061.122061.12 to be applied. This space is, it's rich, and it's interesting, and it's impactful. Like this is the2066.31999999999972066.3199999999997 kind of space where you discover something, get that out in the world, you're helping journalists2070.162070.16 and activists like right now. So it we're really excited to see where this where the space goes2075.75999999999982075.7599999999998 and continues to blossom. So yeah, all sorts of all sorts of techniques just waiting to be applied.2080.42080.4 And are you also actively investigating the the sensors side? Because I imagine that the more2087.27999999999972087.28 or the more capable you are in censoring things, also the better you can research counter strategies.2094.82096.0800000000004 So a bit, we've tried to tailor our research in such a way that we're not directly helping a2100.72000000000032100.7200000000003 sensor. We never want to publish a paper that's like, really the use case of this is just making2104.962104.96 sensors better. So if we do do research down that vein, it's purely in service of let's make2110.72000000000032110.7200000000003 a vision better. Yeah. And we've tried to be very good about not releasing anything and not publishing2116.08000000000042116.08 anything that's directly, hey, sensors, this new technique, man, that's gonna really change the2121.362121.36 game for you should try and roll that out. So I guess that it's your question. Yeah. Yeah.2127.442128.48 Well, if you if you look ahead, you said, Yeah, we said that the space is wide open.2133.122133.12 What would be what do you see as a, like maybe a bit of a North Star for for the field, like for2142.02142.0 let's say, censorship evasion or something like this? What would be characteristics of an ideal2148.82148.8 algorithm? That's a really good question. ideal algorithm, something to shoot for. So I think I2158.082158.08 can answer that question by talking to I guess how this how the problem of censorship is getting2163.042163.04 harder and getting more complicated. So as censorship is continuing to evolve, like this,2168.562168.56 this cat and mouse game exists. It's not just sensors patching bugs, like sensors themselves2173.042173.04 are finally getting more sophisticated, they're getting better. And one direction that we think2177.75999999999982178.32 sensors will start exploring in the future is this idea of more personalized censorship. So instead2182.79999999999972182.7999999999997 of censorship policies being rolled out for the entire country, you can imagine a system where2187.27999999999972187.2799999999997 users with elevated social credit scores or different professions, things like this, could2192.722192.72 access different content online and be subjected to different different forms of censorship. And in2196.882196.88 cases like this, something like just directly applying Geneva gets a little bit harder,2200.962200.96 because you can't just apply Geneva in one vantage point and help everybody, right? Like you need to2204.72000000000032204.7200000000003 suddenly have a way to, to reach more people and help more people at once. So it's this question2211.62211.6 of how can we scale this up in a large way? And how can we scale this up safely in a way that2216.72000000000032216.7200000000003 protects itself from attacks from the adversary? Like the nations they can see our traffic, so in2221.282221.28 theory, they could muck with the training. How can we prevent that? So in crafting this ideal2226.882226.88 algorithmic circumstances, a lot of things you have to consider. So I think building towards2231.68000000000032231.6800000000003 this idea of can we do federated training across a large population? Can we do this in a way that2237.282237.28 protects users? Can we make the algorithm more efficient so it needs less connections to figure2241.842241.84 things out? All sorts of things like this, I think are really good goals to shoot for. And as more2248.24000000000022248.24 people, viewers, check this out, as more people like jump into the space and play with this,2253.122253.12 these are some of the problems they're going to be building towards.2255.522255.52 Is there any work on like, screwing with the sensors? Like I imagine that if I, you know,2262.082262.08 if I build an evasion attack, that has like a really low hanging fruit of fixing it,2267.75999999999982267.7599999999998 and that fix in itself would somehow be, you know, completely devastating, but I don't know it when2276.95999999999962276.96 I implement it. Is there work in this direction? So is there work in the space of mucking with2285.442285.44 sensors? Definitely. Crafting the kind of attack you described is kind of tricky, because we don't2290.962290.96 know what the sensors code looks like, you know. Now there is this idea of there are bugs and2298.322298.32 limitations as they patch them may expose them to other attacks. So one quick example of this,2303.762303.76 if we go back to our analogy of we're sending letters back and forth, a common limitation that2308.962308.96 many less sophisticated sensors experience is they can't, if I've taken a packet or taken a letter2314.42314.4 and I break into two letters, they can't put them back together. And that's like a huge limitation.2319.762319.76 So it's really easy for me just to take a packet, split it up and send it through. So to fix that,2324.42324.4 the sensor, all it needs to do is remember every packet it sees and then stitch it back together2329.60000000000042329.6 based on the numbers on each of the packets. So that's like a simple fix to a limitation.2335.442335.44 But when you apply that fix, you open yourself up to the entire space of attacks of maybe I can2340.562340.56 sneak a letter in there that you think belongs halfway through the message, but it actually2344.482344.48 belongs to the beginning or it actually belongs to the end or it actually doesn't belong in that2347.75999999999982347.7599999999998 at all. And so you have, this is one example that we've seen in the wild where this idea of2353.83999999999972354.7999999999997 I have, I need to fix a limitation and by fixing the limitation, I've opened myself up to2358.722358.72 a dozen other potential attacks. So that definitely exists.2361.35999999999972365.3599999999997 I'm just thinking from my new-bish understanding right here, how much of a problem is it that our2371.83999999999972371.8399999999997 protocols are rather fixed? I imagine if I had like a dynamic language where if I communicate2378.39999999999962378.3999999999996 with anyone, the first step would actually be to negotiate a protocol in a very dynamic way,2385.22385.2 right? That would sort of give me the possibility much more to together with the person that I want2391.83999999999972391.8399999999997 to communicate with, negotiate something that could get around these sensors in a completely2397.91999999999962397.9199999999996 adaptive fashion. Is that at all feasible or is there some flaw?2402.162403.4399999999996 So is it feasible? Maybe. I mean, if such a thing like that could be built, it'd be incredible.2408.642408.64 Yeah.2408.79999999999972408.7999999999997 It'd be awesome. So AI people watching, get on that because that sounds awesome. There are2414.02414.0 definitely some challenges into rolling that out and you basically need to get in the headspace of2420.02420.0 if I roll out this protocol and the sensor knows about it, what is it going to do? What is it going2424.322424.32 to do about it? So there are protocols that exist out there where from the very first bite you sent,2430.242430.24 the whole thing is encrypted. And in that case, it's pretty hard to fingerprint, right? It never2435.122435.12 looks the same. It's always just a stream of random looking bites. But the sensor can also2439.442439.44 find that just by looking for something that looks like a random stream of bites. And just like you2442.962442.96 said, that protocol never changes. It always looks the same. So if you need to really develop a system2448.322448.32 that's flexible and dynamic enough that today it looks like this protocol, tomorrow it looks like2452.72000000000032452.7200000000003 this protocol, today it looks like nothing in between. So you really need to be very creative2456.562456.56 and very deliberate with how you do it. So I'm not aware of anything like that personally.2460.82460.8 Maybe someone's working on it out there, but it would be awesome if you could do it.2463.922463.92 Now, speaking of mucking with sensors, you also have other work that uses the censorship2471.762471.76 infrastructure. So essentially anything that's in place from the sensors to perform some attacks.2479.12000000000032479.1200000000003 As I understand it, any attack you could do is actually made potentially worse by the censorship2487.20000000000032487.2000000000003 infrastructure, such as a DDoS attack or something like this. Do you want to talk a little bit about2492.72000000000032492.7200000000003 that? I would love to. Yeah, so an area of work that we started exploring a year or two ago,2498.82498.8 something we noticed for a lot of these sensors is when you interact with them as a user,2503.60000000000042503.6000000000004 they need to respond to you. They need to send you some traffic. If I'm trying to request some2508.08000000000042508.0800000000004 resource and that resource is forbidden, maybe the sensor sends me a block page. That block page2512.82512.8 says, hey, you're not allowed to access this. And the thing is that communication there, what's going2518.02518.0 on is my request can often be much smaller than the size of the block page I get back.2522.322522.32 So as an attacker, this opens up the space of, hey, maybe I can use the sensor to launch an attack2528.08000000000042528.0800000000004 at somebody else by making a request for forbidden things, pretending to be someone else,2532.562532.56 and then letting them send that huge response at that other person. And this is an idea of a2538.02538.0 reflected attack or an amplification attack because as an attacker, I can make a tiny request and then2544.02544.0 get a bigger request out of it. So I'm amplifying my traffic. So amplification attack. So we started2550.16000000000032550.16 exploring whether we could do this to sensors and use these nation state sensors or even just2554.722554.72 beyond sensors, there's normal firewalls, like things that universities or just regular network2559.27999999999972559.2799999999997 organizations have deployed. We discovered hundreds and hundreds, tens of thousands, millions2565.522565.52 of IP addresses that were behind these sensors that we could use to launch these attacks.2569.682569.68 And found these attacks got crazy powerful. And the so the the who does it hurt more the2578.02578.0 sensors or the final recipients of the attack? Yeah, so in this case, the weight is buried by2586.962586.96 both, but the brunt of the impact will be felt by the victim. This line of work, it mucks with the2591.762591.76 sensor, but really, really the some of the I want to say the purpose or something you could distill2598.642598.64 this work down to was sensors are causing more harm to the internet than they're not just the2604.162604.16 harm of a sensor is not just restricted to the citizens within its borders. Like a sensor anywhere2608.722608.72 is a threat to anyone everywhere. Yeah. So it's this work was less about let's flood a sensors2613.35999999999972613.3599999999997 network and more about let's proofs the world of these things are dangerous when they've been2617.27999999999972617.2799999999997 applied as carelessly as they've been deployed. Now other than block pages, you have some you have2623.042623.04 some very specific schemes of what you do specific to the censorship infrastructures that make these2630.082630.08 attacks even more powerful. What are examples of that? Yeah, so discovering these attacks in the2637.22637.2 first place, I'm making it sound very simple, right? You just send a request, and then the2640.79999999999972640.7999999999997 response gets through. But I'm skipping over kind of an enormous step in here, because what I've2645.62645.6 just described, send a request pretending to be someone else should not be possible. Yeah, that2650.242650.24 that sentence should not exist. And it shouldn't be a thing you can do. And the reason that's the2654.02654.0 case is because when we make requests all the time, this happens, I think there's a there's a2658.31999999999972658.32 gif in there that explains exactly what I'm saying. Just scroll up a little bit. There's a three way2663.20000000000032663.2000000000003 handshake that we need to complete. And that three way handshake is just this short exchange of2668.962668.96 packets. I think it's the one right about that. It's the short exchange of packets at the very2672.562672.56 beginning right here short exchange of packets that exists at the very beginning of our connection.2676.562677.04 And as an attacker, if I try and spoof the three way handshake, if I pretend to be my victim and2681.20000000000032681.2000000000003 start to handshake, the server is going to respond to the victim. And so I won't be able to get the2685.60000000000042685.6 critical bit of information I need from that handshake to finish it. And I need to finish2689.27999999999972689.2799999999997 that handshake in order to make a request. So throughout all of the all of networking history,2695.75999999999982695.7599999999998 basically up until this paper, it's been assumed that TCP this underlying protocol behind all2701.22701.2 these requests is immune to these type of amplification attacks, largely immune. There's2706.482706.48 a small caveat there, but it's not worth getting into. So how do we go about addressing this2712.162712.16 problem? We used Geneva and AI techniques. And basically, we replaced Geneva's fitness function.2718.87999999999972718.8799999999997 And we told you that, hey, you can talk to these sensors. But instead of rewarding you for getting2723.522723.52 forbidden content, what we are going to do is we're going to reward you for getting content2727.75999999999982727.7599999999998 without establishing a connection. And we're going to reward you for getting the biggest content you2731.922731.92 possibly can. So kind of turning the fuzz around its head a little bit, and letting it explore the2736.642736.64 space of strategies that a can confuses the middle box into responding so tricky into thinking we2742.79999999999972742.7999999999997 have a connection already. Yeah. And then B, once we've tricked it, getting the biggest possible2747.042747.04 response we can. And so this this is a second set of work that was really powered by the same2752.42752.4 Geneva genetic algorithm. And we were able to use the same set of building blocks and primitives2757.122757.12 and programs that we had developed previously. Yeah, we just applied them in a new way. And this2762.082762.08 is if I understand it, it is not a weakness in TCP. Like if TCP were implemented correctly,2767.62767.6 Geneva wouldn't be able or shouldn't be able to find something around this. But this is specifically2773.682773.68 because these middle boxes are in there, right? Yeah, you're spot on. TCP, TCP itself is not the2780.962780.96 problem. It's the implementation of TCP. Yeah. And that's partially why when we did this paper,2785.362786.0 we did this work, you can't just study TCP itself, you can't like download the protocol2790.082790.08 specification, like think really hard. Yeah, because that's not going to help you. You need2793.442793.44 to actually study real world sensors. So we did we took Geneva, we trained it against we trained2798.482798.48 against hundreds actually of sensors around the world. And then we then took the results of that.2802.722804.08 And we're able to scan the whole internet. We scan the internet almost 50 times actually IP before2809.62809.6 internet with these different with these different packet sequences that Geneva discovered, and2813.922813.92 effectively just attacked ourselves over and over and over again. Yeah. To see what kind of2817.922817.92 damage we could do. And how does that square? So before you said, we're never going to release2824.082824.08 anything that helps the sensor in any way. And now you're releasing a recipe for launching massive2830.962830.96 attacks on something right? How does I mean, I I usually think you know, any technology can be used2837.282837.28 for like with that, I could actually attack the sensor directly, right? And and just make their2843.442843.44 life miserable. Using their own infrastructure, which is ironic, even. I could use it to you know,2851.62851.6 I could use it to DDoS the Red Cross as well. So my perspective usually is that any technology can2859.122859.12 be used for good and for bad. But you've before said a little bit into the direction, we never2864.082864.08 want to publish anything that helps the sensor. This seems to be different. What what's different2869.362869.36 here? Yes, the difference the difference here is and I want to note that we didn't just discover2873.68000000000032873.6800000000003 these and just immediately put them out into the world. Yeah, we spent almost a year actually just2878.322878.32 doing responsible disclosure. We emailed every middle box manufacturer we could we could get in2884.562884.56 touch with and gave them advanced copies of our paper advanced copies of this attack. We actually2890.16000000000032890.1600000000003 emailed there's something called certs country level emergency readiness teams. These are teams2895.68000000000032895.68 that exist in various parts of the world that are basically designated to respond to network events2900.02900.0 pertain to that region. So we emailed all of them around the world. So it's like, hey, that Chinese2905.91999999999962905.9199999999996 sensor you guys are operating potential problem there. Yeah. So we spent months and months working2912.162912.16 with DDoS manufacturers certs, middle box manufacturers to try and patch these things and2918.31999999999972918.3199999999997 clean them up before this ever got out into the world. At the end of the day, this kind of2922.79999999999972922.8 runs into this this broader responsible disclosure thing that a lot of the security field that2927.522927.52 wrestles with of if I never published this, there's often no incentive for for this issue to2933.362933.36 be patched. Yeah, like if there's no there's no downside to the network, they don't need to patch2937.362937.36 it. And if someone else discovers it before this gets out there, then they can start using it2941.12000000000032941.1200000000003 without it being without the world and the defenders knowing about it. Yeah. So there's2944.962944.96 this this really tricky line you got a toe almost of I need to let everyone have as much of a2950.322950.32 time as possible to patch it. But they also need to know it's going to get out there to2953.922953.92 incentivize them to patch it. So with that with that in mind, we took the approach of let's take2959.282959.28 as long as much time as we possibly can. Let's tell everyone ever any invested party about this2964.962964.96 attack. Yeah. How to patch it, how to fix it. We gave them scripts to test their network.2968.64000000000032969.44 And then after several months had passed, we were confident that they were if they were going to2973.362973.36 take action, they already did. Then we released the work. Yeah. Cool. Yeah. So we're going to2978.562978.56 have a lot of fun with this. Yeah. Cool. Yeah. Now you're a member of something that's called2984.562984.56 Breakerspace. I've already mentioned it at the beginning. Do you want to maybe it because it's2989.22989.2 pretty unique. Do you want to talk a little bit about what this is and what it does? Yeah,2993.62993.6 I'd be happy to. So Breakerspace is a lab at the University of Maryland. Any UMD students watching2998.322998.32 come check us out. The Breakerspace lab, the kind of defining feature of this lab is that3003.75999999999983003.76 it's a place where you can start to join and participate in the lab. So the goal of this lab3008.963008.96 is to broaden and make research more accessible beyond just like PhD students and graduate3013.923013.92 students who are doing it. So this Geneva team and the broader censorship team within this lab has3019.12000000000033019.1200000000003 been staffed. I've been leading the team, but I've had a team of undergraduates who've been working3023.60000000000043023.6000000000004 with me on these projects. So every project we've talked about today and every paper on our website,3028.963028.96 this has not just been a one man show. This has really taken a village to get these off the ground3032.64000000000033032.64 and it's huge, huge tasks. And I'd be remiss if I didn't mention a huge team of students who have3038.083038.08 worked on this with me. And okay, not unrelated to them being undergrads or not. Did you like how3045.23045.2 often does it happen that you get into like, hot waters? Like, you know, that they're, you know,3050.563050.56 insecurity research, there are implicate their national defense implications, there are legal3056.87999999999973056.8799999999997 implications and so on. Like, how do you navigate that space? And how often does it happen that3061.35999999999973061.36 you're like, oops, I hope no one noticed this? It definitely happens. And we're really lucky to3070.16000000000033070.1600000000003 have such a supportive university and atmosphere in which we can do these things. We've worked3074.72000000000033074.7200000000003 closely with IRB, the Institution Review Board and our network security people. I mean, there was one3081.283081.28 week where we, for that scanning paper we were talking about, we're like, all right, let's kick3084.43084.4 off some scans. And I mean, immediately knocked out the university firewall. It's like, oh no.3088.883088.88 And they worked with us and helped us get it back and then helped to work in such a way that wouldn't3092.883092.88 happen again. So what you're describing absolutely happens. I mean, one time we were accidentally,3097.843097.84 we didn't know this, we were accidentally attacking like the city of Jacksonville, Florida.3101.283101.28 And it was like, whoops, let's go email them. So that stops happening. Like the University of3105.843105.84 Kentucky, things like this. So what you're describing happens all the time. And it's like,3109.763109.76 oh, shoot, whoops. And often those like whoops moments are like, that's a cool discovery you3113.763113.76 just made. We also got to go fix whatever you just broke. Yeah. So totally happens, happens all the3119.20000000000033119.2000000000003 time. We got lots of crazy stories like that. We're really lucky to have such a supportive3123.363123.36 atmosphere, which we can do these things. It's okay to break things as a work to fix them,3128.03128.0 obviously, in such a supportive atmosphere. Yeah. Where can people go if they want to get started3133.923133.92 in this space? Like, let's say I'm an AI researcher, I want to have a good understanding of3139.68000000000033139.68 whatever, reinforcement learning and evolutionary methods and genetic algorithms and all like,3147.27999999999973147.2799999999997 but I've not much clue of security. Is there resources I can go to that you can recommend?3153.523154.72 So for security in general, there's so many, I mean, I'm sure there's a two dozen YouTube3160.243160.24 channels that could probably hook you up with like incredible, so maybe we can send someone3164.79999999999973164.8 and look some of those below or something. I wish I could say that there is like this amazing AI3170.83171.36 censorship. I want to select censorship resource space where everyone can come to and learn how3175.363175.36 to apply AI to these techniques. Something like that doesn't quite exist, but there are great3180.16000000000033180.1600000000003 resources for learning about what censorship has happened in the world. So something like UNI,3185.843186.5600000000004 UNI is O-O-N-I. It's the Open Observatory of Network Interference. It's a spin out from the3192.323192.32 TOR team that monitors censorship all over the world. You can pull up the website later, but3197.363199.04 they can identify censorship in basically every country. It's run by volunteers and it's an3203.523203.52 incredible organization. So there's all sorts of groups like this that are studying censorship,3207.443207.44 monitoring for censorship. So for people who want to break into this more specific field of3211.523211.52 censorship, there's all sorts of great resources. Censored Planet is another group run by the3215.68000000000033215.6800000000003 University of Michigan. They're an awesome team. They also publish all their data.3219.523219.52 Cool. So all these groups have this very open sharing, like hop on their website and they've3224.323224.32 got lots of great resources, reports, data you can get your hands on.3227.443227.44 Excellent. Is there anything else you want to get the word out to machine learning and AI people?3235.363236.0 Big open questions, anything that you feel should be out there?3241.043241.04 Really just this whole space, this whole idea of there's this entire space of you can apply3248.163248.16 these techniques to in a way that's immediately impactful, helping real humans on the other side3253.923253.92 and humans who kind of need this help. You have this potential to make a real immediate impact3259.443259.44 on the world. So it's a great space to get involved in.3262.483262.48 Excellent. Kevin, thank you so much for being here and bringing this a bit closer to the end.3269.363269.36 I know more. I hope everyone else does too now.3272.03272.0 Thanks so much for having me. This has been a blast.3274.83274.8 Excellent.3275.63275.6 Super appreciate it.3276.563276.56 Bye.3300.56\"}"}