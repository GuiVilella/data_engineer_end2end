{"data": "{\"value\":\"0.0 Hello everybody. And9.329.32 welcome to the second10.4410.44 video in this open CV11.9211.96 Python tutorial series.13.6413.88 In this video, we're14.7214.72 going to be talking15.3215.32 about image15.8815.88 manipulation, how images17.6417.64 are actually represented18.9618.96 in the computer, and20.220.2 just giving you a bunch21.24000000000000221.240000000000002 of information about how22.5222.52 images actually work,23.8824.080000000000002 because that's going to24.624.6 be very important for25.8825.88 this series. It's kind26.9226.92 of a prerequisite for27.8827.88 the rest of the videos.29.0429.04 Anyways, one of the30.3230.32 kind of cool things I31.1631.16 will show you how to do31.831.8 here is to copy a part33.2833.28 of one image to another34.7234.72 part of the image. So35.9235.92 let's take a generic36.83999999999999636.839999999999996 example. Let's say you37.9237.92 had an image where38.7238.72 there was like a hockey39.7639.76 puck in it or a soccer40.8440.84 ball or something, and41.6441.64 you want it to copy42.3642.36 that multiple times.43.3243.32 Well, I'd show you how44.2444.24 you could do that.44.8445.28 Uh, anyways, that is46.246.2 what we're going to do46.7246.72 in this video. Before I48.1648.16 dive into that though,49.049.04 I will quickly mention50.0450.04 that I am following50.9651.04 along with open CV52.4452.44 documentation for this53.7653.76 tutorial. So a lot of55.0455.04 people ask me, you know,55.87999999999999555.879999999999995 how do you come up with56.51999999999999656.519999999999996 this stuff? Like, are57.457.4 you just copying this58.23999999999999558.24 from open CV? Um, I'm60.12000000000000560.24 trying to be open and60.9660.96 transparent with you61.5661.56 guys. What I do before62.662.6 these videos is I go, I63.80000000000000463.800000000000004 read the open CV64.6000000000000164.60000000000001 documentation. I pull66.0466.04 out stuff that I think66.8466.84 is interesting and that67.667.6 I want to show. I skip68.8468.84 over a lot of it. And70.0870.08 then I just go ahead71.0471.04 and teach something72.0872.08 interesting essentially.72.9600000000000173.24000000000001 So, uh, I want to make74.474.4 that clear. I will link75.475.4 all of the open CV76.3676.36 documentation that I77.3677.36 use for videos in the79.0879.08 description. So if you80.2400000000000180.24000000000001 want the more detailed81.481.4 stuff where you want to82.3200000000000182.32000000000001 see all the stuff that I83.0483.04 skipped over, then click84.2884.28 the link in the84.7284.72 description. Last thing86.0886.08 there is a GitHub86.9600000000000186.96 repository for this88.3688.36 tutorial series. Uh,89.6489.64 this will be linked in90.5290.52 all of the descriptions91.5291.52 for all of these videos.92.8399999999999992.83999999999999 And you can see all of93.5599999999999993.55999999999999 the code that we write94.3694.36 in each video right now.96.0399999999999996.03999999999999 I'm obviously only up to96.9199999999999996.91999999999999 tutorial one. So I have98.3298.32 the tutorial one code99.4799999999999999.47999999999999 upload on GitHub. And as101.24101.24 the code gets more101.75999999999999101.75999999999999 complicated, this will102.52102.52 be more useful. So just103.52103.52 check the descriptions.104.52104.8 Anyways, let's dive in106.16106.16 here. So the first thing107.32107.32 that I want to show you108.11999999999999108.52 is how an image is109.36109.36 actually represented110.39999999999999110.63999999999999 because obviously we111.56111.56 loaded in this image,112.72112.96 but what is the image113.75999999999999113.75999999999999 actually look like? What115.16115.16 is representing this116.24116.24 image? And how do we116.91999999999999116.92 display this image?118.16118.16 Well, we know how to118.8118.8 display it, but how does119.8119.8 the computer kind of120.52120.52 interpret it? So let me121.96000000000001121.96000000000001 just print out this123.24000000000001123.24000000000001 image here, and let's123.92123.92 just have a look at what124.68124.68 it is. So when I print126.16126.16 it out, we actually get127.4127.4 what's known as a numb128.48128.48 pie array here. And you129.64000000000001129.64000000000001 can see, we have a bunch130.36130.36 of pixel values, which131.28131.28 are all just white,132.2132.56 because this is the133.28133.28 border of the image134.08134.08 that it's showing us.134.88135.56 Anyways, the reason I'm136.4136.4 showing you this is137.24137.24 because we need to137.84137.84 understand how an image138.96138.96 is actually represented.140.08140.56 Now, uh, in our open CV,142.92000000000002143.56 we actually use num144.88145.04 so open CV and numb pie146.4146.4 are very closely147.24147.24 correlated. And when148.36148.36 you load an image, what149.56149.56 it actually does is it150.64000000000001150.64000000000001 extracts the pixels from152.08152.08 this image and loads153.32153.32 them into a numb pie154.4154.44 array. So if I were to155.72155.72 type, uh, or I were to157.32157.32 print, sorry, the type158.52158.56 of image you would see160.24160.24 that we get a numb pie161.32161.32 dot N D a red. You163.36163.36 don't have to163.72163.72 understand numb pie.164.48000000000002164.48000000000002 You don't have to no165.56165.56 numb pie at all to166.28166.28 follow along with this.167.16167.44 But if you do know numb168.24168.24 pie, then this is168.88168.88 probably useful169.44169.44 information. So numb170.64000000000001170.64000000000001 pie is kind of a high171.8171.8 performance array172.72172.72 library for Python. It174.32174.32 just allows you to do175.04000000000002175.04000000000002 more optimized175.92000000000002175.92 operations with176.79999999999998176.83999999999997 arrays. I believe it's178.44179.0 backend or it's, you180.2180.2 know, lower level code181.32181.32 is written in C or C182.48182.48 plus plus. Uh, and183.67999999999998183.67999999999998 while it just makes184.23999999999998184.23999999999998 this, we can do faster185.27999999999997185.27999999999997 and better operations186.51999999999998186.51999999999998 on arrays in Python.187.44188.07999999999998 Anyways, anything that189.27999999999997189.27999999999997 you would normally189.88189.88 know about a regular190.76190.76 list in Python will191.95999999999998191.95999999999998 apply to a numb pie193.0193.0 array, except there's194.07999999999998194.07999999999998 just a ton of other194.72194.72 stuff that you can do.195.56195.92 So for example, I can197.16197.16 print out the shape of198.67999999999998198.67999999999998 a numb pie array. Now200.23999999999998200.23999999999998 the shape of this201.2201.2 array tells me the202.48202.48 number of rows, the203.56203.56 number of columns, and204.67999999999998204.67999999999998 then the number of205.35999999999999205.36 channels in my image,206.84207.04000000000002 specifically when we're207.92000000000002207.92000000000002 talking about images.208.8209.04000000000002 So if I print this out,210.0210.12 we get nine, nine, five211.28211.44000000000003 by a thousand by three.212.64000000000001213.0 That tells me that I213.88000000000002213.88000000000002 have 995 rows in my216.4216.4 image. When I say217.16000000000003217.16000000000003 Rose, that's the height218.32000000000002218.36 of the image. This219.56219.56 tells me I have a220.16000000000003220.16000000000003 thousand columns. So221.60000000000002221.60000000000002 that is the width of222.48000000000002222.48000000000002 the image. Uh, and then223.8223.8 it tells me that I have224.64000000000001224.68 three channels. So226.16000000000003226.16000000000003 again, the order is227.36227.36 height width, and then228.88000000000002228.88000000000002 channels. Now, when I229.96229.96 say channel, a channel231.4231.4 is really just the232.36232.36 color space of our233.52233.52 image. So how many234.72000000000003234.72 pixels or how many235.96235.96 values sorry, are236.92236.92 representing each237.76237.76 pixel. Now it turns out239.35999999999999239.48 that, uh, in our numb240.92240.92 pie rays or in our open242.28242.28 CV library, whatever,243.52243.64 we have three values244.88244.88 that represent each of245.8245.8 our pixels. Now those247.24247.24 values are red, green,248.76248.8 and blue, and249.64249.64 specifically in open CV,251.0251.04 it's actually going to251.64251.64 be blue, then green,252.88252.92 then red. And let me253.92253.92 show you what I mean254.52254.52 by this. So firstly,255.76255.76 you have to understand256.68256.68 the one representing257.44257.44 this image. We have a258.2258.2 three-dimensional259.0259.0 array. We have an260.28260.28 interior array. So let261.32261.32 me, let me draw out a262.24262.24 kind of example here.263.2263.92 It looks something like264.6264.6 this. We have our first265.8265.8 array. Then inside of267.04267.04 this array, we have a267.96000000000004267.96000000000004 bunch of other arrays.268.96000000000004269.16 These arrays represent270.28000000000003270.28000000000003 the rows of our images.271.76000000000005272.04 Then inside of these273.36273.36 arrays, we have a bunch274.72274.72 of pixel values, and276.24276.24 these are the columns277.28000000000003277.32000000000005 in each row. So I might278.6278.6 have a pixel that is279.6279.6 black. So that would be280.56280.56 zero, zero, zero. I282.08000000000004282.08000000000004 might have a pixel282.88282.88 that's white. So two283.84000000000003283.84000000000003 three, five to 55, but285.44285.44 this is kind of how it's286.32000000000005286.32000000000005 laid out. So if I just287.68287.68 had a two by two image,289.0289.0 so two pixels by two290.04290.04 pixels, then let's just291.48291.48 copy this. It will be292.52000000000004292.52000000000004 represented in our293.24293.24 program. Uh, something294.92294.92 like this, we would just295.64295.64 have two pixels by two296.6296.6 pixels. We'd have two297.68297.68 black pixels and then299.16299.2 two white pixels. So we301.08301.08 would know that this301.88301.88 pixel here was at302.84000000000003302.84000000000003 position zero zero, or304.28000000000003304.28000000000003 it was the top left305.12305.12 pixel because that's306.0306.0 where it is in the306.84000000000003306.84000000000003 array. So hopefully307.96000000000004307.96000000000004 that's clear, but you308.72308.72 have three values that309.8309.8 represent each pixel.310.92311.12 And regularly it's312.8312.8 going to be red, green,313.68313.68 blue in open CV. It's315.36315.36 actually going to be315.88315.88 blue, green, red. Now,317.16317.16 what I mean by that is317.92317.92 if we have three values,318.92318.92 zero, zero, zero here,320.36320.72 we read them like this321.72321.72 blue, green, then red.323.52000000000004323.56 So this is the amount324.56324.56 of blue in our pixel,326.0326.04 the amount of green in327.12327.12 our pixel and the327.76000000000005327.76000000000005 amount of red in our328.72328.72 pixel. Now the values330.40000000000003330.40000000000003 here that are valid is332.28000000000003332.32000000000005 between zero and two333.48333.48 55. So zero represents335.6335.6 none to 55 represents337.52000000000004337.56 all. So if I were to338.72338.72 have say two 55, zero,340.36340.36 zero, that means I have341.36341.36 a blue pixel. I have no342.64000000000004342.64000000000004 green, no red and all343.88000000000005343.88000000000005 blue. If I were to have345.20000000000005345.20000000000005 like one 28 here, that347.16347.16 would mean I would have347.8347.8 like a slightly lighter349.12349.12 blue than if I just had350.92350.92 two 55. So hopefully352.6352.6 that's clear, but that353.52000000000004353.52000000000004 is how you represent a354.32354.32 pixel with blue, green355.6355.6 and red values. You have356.76356.76 three of them, all of358.2358.2 which, which are in the359.12359.12 range of zero to two 55.361.04361.16 So we will continue on362.04362.04 one second, but to362.92362.92 quickly thank the363.68363.68 sponsor of this video364.84000000000003364.84000000000003 and this series, which365.84000000000003365.84000000000003 is algo expert algo367.56367.56 expertise, the best368.36368.36 platform to use for369.24369.24 preparing for your369.84000000000003369.84000000000003 software engineering,370.84000000000003370.84000000000003 coding interviews. They372.0372.0 have a data structures,373.08000000000004373.08000000000004 crash course, mock374.36374.40000000000003 interviews, and over 125376.32376.32 high quality coding377.36377.36 interview questions378.16378.16 that all have a detailed379.6379.6 conceptual overview and380.88380.88 code walkthrough. I'm382.36382.36 actually an instructor383.32383.32 at algo expert, and you384.76384.76 can check out some of385.44385.44 the questions that I've386.24386.24 created by going to the387.28387.28 link in the description388.52388.68 and using the code tech389.56389.56 with Tim for a discount390.88390.92 on the platform. Now to392.71999999999997392.71999999999997 bring this back to what393.52393.52 I just explained, these394.76394.76 pixels are all set up in396.08396.08 columns and those397.15999999999997397.15999999999997 columns are all in a398.15999999999997398.15999999999997 row. You have multiple399.4399.4 rows, all which have all400.84400.84 of the column values in402.12402.12 them. And then inside of403.28403.28 the column, uh, you have404.71999999999997404.71999999999997 your pixels. So405.71999999999997406.36 hopefully that's clear.407.28407.6 That's how this works.408.71999999999997408.71999999999997 That's the basic409.28409.28 representation. And the410.52410.52 reason that's important411.52411.56 is because when we412.15999999999997412.15999999999997 manipulate images, all413.88413.88 we're really doing is415.03999999999996415.03999999999996 modifying this array.416.35999999999996416.71999999999997 For example, even when417.64417.64 we rotated this image,419.08419.15999999999997 all that actually420.12420.12 happened in kind of the421.08421.08 lower level. When I422.08422.08 wrote that a CB two dot423.64423.64 rotate is it took this425.15999999999997425.15999999999997 array that we had, and426.28426.28 it just rotated the427.4427.4 values in that array,428.71999999999997428.84 such that we have the429.71999999999997429.71999999999997 rotated image. So you431.12431.12 don't really need to use432.35999999999996432.35999999999996 the CV to library to do433.64433.64 all of this. It is going434.47999999999996434.47999999999996 to be better to do that,435.44435.52 but you actually can436.28436.28 manually modify images437.68437.68 by just modifying the438.88438.88 array data structure439.84439.84 that represents them.440.79999999999995441.2 So let's show some more442.52442.52 concrete examples. Let444.28444.28 us actually change the,446.15999999999997446.52 I'm trying to think of a447.23999999999995447.23999999999995 good example here. Let448.64448.64 us look at the first row450.4450.44 of our image. So if I451.52451.52 wanted to look at the452.28452.28 first row of my image, I453.96453.96 would print out IMG at455.71999999999997455.71999999999997 index zero. So this will457.35999999999996457.35999999999996 give me the first row.458.28458.64 So if I do that, you can459.76459.76 see, we have our first460.79999999999995460.79999999999995 row, which is filled461.67999999999995461.76 with a bunch of white462.64462.64 pixels. Now let's just463.59999999999997463.59999999999997 go and look at row 257.465.96466.4 When we do that, uh, 257468.84468.84 is still giving us white469.59999999999997469.6 pixels. Uh, Oh, it makes471.48471.48 sense. Cause those, the472.24472.24 border it's showing us.473.04473.04 Okay. So I'm just going473.96000000000004473.96000000000004 to look at the first row.475.0475.24 And then what I want to476.32000000000005476.32000000000005 do in the first row is I477.56477.56 want to look at the,478.72479.48 let's see here, uh, the480.92480.92 middle pixel. So I'm482.04482.04 going to look at pixels483.08000000000004483.12 between 45 and 400. So486.8486.8 when I do this notice487.68487.68 that we now find some488.44488.44 pixels that have489.20000000000005489.24 different colors489.96000000000004489.96000000000004 associated with them. Uh,491.24491.28000000000003 just to be clear here,491.88491.88 the reason I keep492.36492.36 getting white is cause493.28000000000003493.28000000000003 the border of my image494.16494.16 is white. So when it495.44495.44 just shows me the first496.28000000000003496.28000000000003 and last element in the497.36497.36 array. So that's why498.92498.92 that's happening.499.76500.16 Anyways, this is how we501.32501.32 would print out the502.0502.0 first row. And then this503.04503.04 is how we would look at503.96000000000004503.96000000000004 the pixels between 45505.48505.48 and 400 in the first506.8506.8 row. So that column507.52000000000004507.52000000000004 value. Now, if I wanted508.6508.6 to look at one pixel in509.8509.8 particularly, I could510.76510.76 remove this slice. So511.76511.76 we could look at 257,513.12513.12 400. And now if I print514.8000000000001514.8000000000001 this out, it's going to515.52515.52 give me the value of one517.08517.08 of these pixels. So what518.6800000000001518.6800000000001 I'm going to do now is519.4519.4 I'm going to change a520.4520.4 bunch of the pixels in521.6800000000001521.6800000000001 my image. And I'll show522.8000000000001522.8000000000001 you what that actually523.5600000000001523.5600000000001 looks like when we, uh,524.5600000000001524.5600000000001 when we put the image525.6525.6 up. All right. So my526.52526.52 screen recording527.16527.16 software just bugged527.96527.96 out for a second. I528.72528.72 don't know why that was529.4529.4 happening. Anyways,530.12530.1600000000001 what I'm going to do530.6530.6 now is I'm going to531.4531.4 loop through the first532.24532.24 a hundred rows in our533.52533.52 image. So recall what535.0535.0 we're doing is we're535.64535.64 going to loop through.536.48536.5600000000001 I just picked a hundred537.48537.48 as an arbitrary number.538.32538.32 You can loop through538.8000000000001538.8000000000001 whatever you want. I539.52539.52 just want to show you540.0400000000001540.0400000000001 how we can actually540.6540.6 change pixels and what541.84541.84 that looks like. So I'm542.8000000000001542.8000000000001 going to say for I in544.1600000000001544.1600000000001 range and then a545.0400000000001545.0400000000001 hundred, we're going to545.9200000000001545.9200000000001 look through the first546.52546.52 a hundred rows. We're547.6547.6 then going to say for548.36548.36 J in range. And then550.52550.52 here, I'm actually551.08551.08 going to say IMG dot552.28552.28 shape at index one. Now554.28554.28 recall that when we do555.1600000000001555.1600000000001 the shape, this is going556.28556.28 to give us the Rose557.9200000000001557.92 columns and channels.560.1999999999999560.36 So number of values561.4399999999999561.4399999999999 that represent a pixel,562.36562.36 that's what channels563.04563.04 is. Uh, so I want to564.36564.36 look at the columns. So565.5999999999999565.5999999999999 for each a hundred rows,566.88566.92 I want to loop through567.64567.64 the entire width of the568.7199999999999568.7199999999999 image. So the entire569.8399999999999569.8399999999999 column, I want to570.76570.76 actually modify. So571.92571.92 we're going to loop572.36572.36 through IMG dot shape573.68573.68 one, which is well, the574.8399999999999574.8399999999999 width of the image. So576.28576.28 anyways, then once I577.4399999999999577.4399999999999 have this, I'm going to578.28578.28 say IMG at index, I at581.5999999999999581.5999999999999 index J is equal to, and583.36583.36 then whatever color I584.24584.24 want to make all of584.9599999999999584.9599999999999 these pixels. So we can586.24586.24 make these cut pixels587.64587.64 random colors. In fact,588.76588.88 let's do that. Cause I589.76589.76 think that's more fun590.48590.48 than just making them591.08591.08 black. I'm going to592.3199999999999592.3199999999999 import random. Uh, and594.24594.24 then inside of here,595.1999999999999595.24 let's say random dots597.04597.16 and then Rand ins and599.12599.12 we'll just go up to599.96599.96 255 and then we will do602.08602.08 this three times. Okay.605.4399999999999605.52 And I think that should606.8606.8 be good. Oops. I didn't607.56607.56 mean to copy the start608.92608.96 of the list here. Let's610.88610.88 remove that, remove612.2612.2 that. And okay. So let614.56614.56 me zoom out so you guys615.4615.4 can see this. What I've616.56616.56 done is said IMG I J, uh,619.52619.56 is equal to, and then620.28620.28 random dot Rand ins621.1999999999999621.2399999999999 random dot Rand ins622.16622.1999999999999 random dot Rand in. So623.4799999999999623.4799999999999 we'll have three random624.3599999999999624.3599999999999 values. Now I want to625.64625.64 show the image. So what626.88626.88 I'm going to say is CV628.56628.56 two dot I am show. We631.3199999999999631.3199999999999 will say image. We will633.0799999999999633.0799999999999 show IMG and then we'll634.88634.88 say CV two dot weight636.92637.0 key zero. So wait an638.8638.8 infinite amount of time639.8640.04 then CV two dot destroy642.3599999999999642.56 all windows. And there644.7199999999999644.7199999999999 we go. So let's run645.52645.52 this and we got an647.6647.6 issue. I'll be right648.6648.6 back after I look at649.48649.48 that. So I made a small650.96650.96 mistake here. I said651.8651.8 Rand int instead of Rand653.56653.56 range, although we can654.8654.8 still make this work. I655.68655.68 just have to put a zero656.48656.48 first, uh, for my Rand658.0658.04 ins. When you take a658.84658.84 Rand integer, you need659.64659.64 to have a, uh, lower661.0799999999999661.0799999999999 bound in an upper661.8661.8 bound. So I just had a663.84663.84 small mistake, but664.4664.4 anyways, we need zero to665.6665.6 two 55, zero to two,666.72666.72 three, five, zero to two667.52667.52 three, five. I think668.6668.6 that should work. And669.68669.68 now notice that the671.0799999999999671.0799999999999 entire top of my image672.36672.36 is a bunch of random673.6673.6 colors. Cause we just674.4399999999999674.4399999999999 randomly set the675.1999999999999675.2 pixels to whatever we676.2676.2 wanted them to be, or677.48677.48 to whatever this678.32678.36 randomly selected. So679.5600000000001679.5600000000001 that is how you modify680.84680.84 the image. You can just681.6800000000001681.72 go ahead and change the682.88682.88 pixel values. And then684.0400000000001684.0400000000001 when you display the685.08685.08 new image, it will have686.08686.08 those new pixel values.687.24687.48 So doing things like688.5200000000001688.5200000000001 looping through, you689.24689.24 know, the border of an690.0400000000001690.0400000000001 image and changing it690.88690.88 is actually really easy,692.2692.24 like I just showed you.693.12693.44 So that's one way to694.5600000000001694.5600000000001 manipulate images. Uh,695.88695.88 and there's a few other696.48696.48 ways that we can do it697.1600000000001697.1600000000001 as well. So what I'm698.08698.08 going to show you now is699.0699.0 how we can actually copy700.48700.48 one part of an image701.5600000000001701.5600000000001 and paste it to another702.76702.76 part. So I'm going to703.6703.6 get rid of this for704.4000000000001704.4000000000001 loop because we don't704.96704.96 need that anymore. And706.0400000000001706.0400000000001 let's just look at this706.76706.76 image and we can see708.08708.08 that I kind of have this708.9200000000001708.9200000000001 like logo here, right?710.08710.36 So I don't know the711.6711.6 exact dimensions or the712.84712.84 exact coordinates of713.88713.88 this logo, but what I'm714.84714.84 going to try to do is,715.64715.6800000000001 is take this logo here,717.12717.12 take this like little718.0400000000001718.08 HTML tag. I don't know719.12719.12 why I'm calling it a719.6719.6 logo, sorry. Uh, and721.0721.0 copy it and just throw721.96721.96 it somewhere else on722.5600000000001722.5600000000001 the image. Again, this723.44723.44 is not to look good.724.76724.76 It's just for an725.24725.24 example. Uh, so let's726.6800000000001726.72 try to do that. So I'm727.88727.88 just trying to figure728.5600000000001728.5600000000001 out where this would729.2729.2 probably be. Um, okay.731.2800000000001731.2800000000001 That's probably about732.1600000000001732.2 500, 600, something like734.64734.64 that. Anyways, let's735.92735.92 try this. So if I want737.1999999999999737.1999999999999 to copy part of the738.6738.6 image, what I can do is740.04740.04 just copy part of the741.12741.12 array. So I'll find the742.52742.52 part in the array that I743.56743.56 want, and I'll show you744.8744.8 how we do that with a745.52745.52 slice. And then we'll746.64746.64 just take that and we'll747.56747.56 just paste that into748.76748.76 another part of the749.48749.48 array. This seems750.52750.52 strange, but it's pretty751.68751.68 straightforward. I'm752.1999999999999752.1999999999999 going to say logo, or753.84754.52 let's just call this755.08755.08 tag is equal to, and756.88756.88 then I am G and I'm758.52758.52 going to use a numpy759.76759.76 array slice. Now I will761.88761.88 describe how this works,762.88762.92 but it's just like a763.68763.68 regular slice in Python,765.28765.28 except you can do it766.4766.8 twice inside of here.767.92767.92 So I'm going to say, I768.52768.52 want to copy from row771.16771.16 500 to row 700. And I775.4799999999999775.4799999999999 want you to copy in776.7199999999999776.7199999999999 those rows. So in row777.76777.76 500 to 700, I want to779.4799999999999779.4799999999999 copy which columns.780.64780.8399999999999 Well, I want to copy,782.52782.56 let's say columns 600785.76785.8 to 900. So what this is788.1999999999999788.1999999999999 going to do is it's789.04789.04 going to copy a square790.4799999999999790.64 of my array. So it will791.9599999999999791.96 copy from 500 to 700.794.36794.36 So all of the rows from795.72795.72 500 to 700, not797.1600000000001797.1600000000001 including 700, then it798.84798.84 will copy all of the800.32800.32 columns from 600 to 900802.44802.64 that are in this row.803.96804.2800000000001 So hopefully that's805.12805.12 clear, but that's how805.88805.96 that works. We're going806.64806.64 to copy that into this807.8000000000001807.88 tag, um, uh, variable809.88809.88 here. Then what I'm811.6800000000001811.6800000000001 going to do after that812.24812.24 is I'm going to paste813.2800000000001813.2800000000001 this into part of the814.96814.96 array. So I'm going to816.08816.08 say, I am G and then817.88817.88 we'll just pick a818.44818.44 random position here819.52819.52 that we want to paste820.24820.24 it at. Uh, we will say822.44822.48 that we want to paste823.48823.48 it. Let's go from row824.52824.52 100 to 300. Now notice828.04828.04 that when I paste this,829.72829.72 it needs to be the same830.8830.8 shape as what I've831.84831.84 copied. So I need to833.24833.24 pick a location in my834.8834.8 image. That is the same836.28836.28 dimensions as the, uh,837.84837.84 the image that I838.4838.4 copied. So let's say839.72839.72 100, 300, then we'll842.04842.04 put it at, you know,843.04843.04 what, 100 actually not844.92844.92 100. Let's go like nine.847.44847.48 No, maybe not 900. Um,849.6849.6 700 two, and then a852.76852.76 thousand. No, we don't853.88853.88 have a thousand. Sorry.854.6854.6 I'm just trying to pick855.44855.44 something that's going855.84855.84 to work here. Let's go856.96856.96 six 50 to nine 50. So859.5600000000001859.5600000000001 I'm now going to take860.6860.6 whatever part of the861.6800000000001861.6800000000001 images in this section.862.88862.9200000000001 And I'm going to paste863.96863.96 it in this section. So865.08865.08 I'm going to say this is865.96865.96 equal to, and then tag,867.84867.84 and then I will show the868.6800000000001868.6800000000001 image. Now I understand869.96869.96 this might be slightly870.5600000000001870.5600000000001 confusing, but I'm just871.6871.64 again, taking a slice of873.08873.08 my image array. And then874.9200000000001874.9200000000001 I'm going to replace876.24876.24 this entire slice with877.72877.76 this slice that we just878.9200000000001878.92 took previously and879.8879.8 notice these are going880.4880.4 to be the same881.0881.0 dimensions, right? It's881.88881.88 the same number of882.88882.88 blocks in between or884.12884.12 same number of, uh,885.4799999999999885.52 elements in between. So886.4799999999999886.4799999999999 anyways, let's run this887.8888.0 and now notice that I've889.3199999999999889.3199999999999 completely messed up890.0799999999999890.0799999999999 what I was trying to890.56890.56 copy, but I've taken892.0892.16 whatever this was here,893.4799999999999893.4799999999999 this mouse, I guess, and894.56894.56 I've pasted it in the895.4895.4 top right-hand corner of896.64896.68 the image. So that is897.76897.76 how you can take898.4399999999999898.4399999999999 something from the899.0799999999999899.0799999999999 image, copy it, and then900.4399999999999900.4399999999999 paste it somewhere else.901.5999999999999901.8399999999999 Now, obviously you need902.52902.52 to know where the thing903.28903.28 is. I was clearly quite904.4904.4 off. I got the hand905.3199999999999905.3199999999999 here, but that's kind of906.5999999999999906.5999999999999 the general idea. So I908.0799999999999908.08 think that's all I908.9200000000001908.9200000000001 wanted to show you in909.84909.84 this video. Again, not911.32911.32 super interesting or912.1600000000001912.1600000000001 useful. We're going to912.76912.76 get into all that stuff913.6800000000001913.6800000000001 later on, but it's very914.72914.72 important to understand915.6800000000001915.6800000000001 this. And I would916.32916.32 recommend that you mess917.24917.24 around with these numb918.12918.12 pyres, modify them, see920.0920.0 if you can write some920.64920.64 cool scripts that go and921.8000000000001921.8000000000001 even maybe generate an922.84922.84 image and then display924.48924.48 that image, see what it925.2800000000001925.2800000000001 looks like and just mess926.2926.2 around with it. So926.96926.96 anyways, that has been927.76927.76 this video. I hope this928.8000000000001928.8000000000001 was helpful to you. If929.8000000000001929.8000000000001 it was, make sure you930.44930.44 pay like subscribe to931.6931.6 the channel and I will932.36932.36 see you in another open933.6800000000001933.68 CV tutorial.938.8399999999999\"}"}